{"version":3,"sources":["../static/js/18.33b01646.chunk.js","slides/2_getting_started/start_2.js"],"names":["webpackJsonp","963","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1_spectacle_code_slide_lib_CodeSlide__","__WEBPACK_IMPORTED_MODULE_1_spectacle_code_slide_lib_CodeSlide___default","a","createElement","bgColor","transition","lang","code","fit","ranges","loc","showLineNumbers"],"mappings":"AAAAA,cAAc,KAERC,IACA,SAAUC,EAAQC,EAAqBC,GAE7C,YACAC,QAAOC,eAAeH,EAAqB,cAAgBI,OAAO,GAC7C,IAAIC,GAAsCJ,EAAoB,GAC1DK,EAA8CL,EAAoBM,EAAEF,GACpEG,EAAmEP,EAAoB,KACvFQ,EAA2ER,EAAoBM,EAAEC,ECoC1HR,GAAA,QAEEM,EAAAI,EAAAC,cAACF,EAAAC,GACKE,QAAQ,YACRC,YAAa,QACbC,KAAK,KACLC,KAjDFA,ysBAkDEC,KAAA,EACAC,SACIC,KAAM,EAAG,KACTA,KAAM,EAAG,KACTA,KAAM,GAAI,MACVA,KAAM,GAAI,MACVA,KAAM,GAAI,MACVA,KAAM,GAAI,MACVA,KAAM,GAAI,MACVA,KAAM,GAAI,MAEdC,iBAAiB","file":"static/js/18.33b01646.chunk.js","sourcesContent":["webpackJsonp([18],{\n\n/***/ 963:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_spectacle_code_slide_lib_CodeSlide__ = __webpack_require__(414);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_spectacle_code_slide_lib_CodeSlide___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_spectacle_code_slide_lib_CodeSlide__);\nvar code=\"export function add(a: i32, b: i32): i32 {\\n  return a + b;\\n}\\n\\n// C\\xF4t\\xE9 JS\\nconst wasm = \\n  await WebAssembly.instantiateStreaming(\\n    fetch(\\\"untouched.wasm\\\"), \\n    {\\n      env: {\\n       abort() {},\\n      },\\n    }\\n  );\\n\\nconst { add } = wasm.instance.exports;\\nconsole.log(add(2, 2));\\n\\n\\n\\nexport function hello(name: string): string {\\n  return `Hello ${name}!`;\\n}\\n\\n// C\\xF4t\\xE9 JS\\nimport { instantiate } from \\\"@assemblyscript/loader\\\";\\n\\nconst wasm = await instantiate(\\n  fetch(\\\"untouched.wasm\\\")\\n);\\n\\nconst { \\n  hello, \\n  __newString, \\n  __getString \\n} = wasm.exports;\\n\\nconst param = __newString(\\\"Paris\\\");\\nconst result = hello(param);\\nconsole.log(__getString(result));\\n\\n\";/* harmony default export */ __webpack_exports__[\"default\"] = (__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_1_spectacle_code_slide_lib_CodeSlide___default.a,{bgColor:\"secondary\",transition:['fade'],lang:\"js\",code:code,fit:true,ranges:[{loc:[0,3]},{loc:[4,8]},{loc:[15,17]},{loc:[20,23]},{loc:[24,26]},{loc:[27,30]},{loc:[31,36]},{loc:[37,41]}],showLineNumbers:true}));// besoind e code js pour bootstraper une appli JS - ça c'est indépendant d'assemblyscript\n// conseil assemblyscript loader dés que l'on veut passer autre chose qu'un nombre en param comme une string, \n// oui c'est plus compliqué que ça en a l'air une string\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/18.33b01646.chunk.js","import React from \"react\";\nimport CodeSlide from \"spectacle-code-slide/lib/CodeSlide\";\n\nconst code = `export function add(a: i32, b: i32): i32 {\n  return a + b;\n}\n\n// Côté JS\nconst wasm = \n  await WebAssembly.instantiateStreaming(\n    fetch(\"untouched.wasm\"), \n    {\n      env: {\n       abort() {},\n      },\n    }\n  );\n\nconst { add } = wasm.instance.exports;\nconsole.log(add(2, 2));\n\n\n\nexport function hello(name: string): string {\n  return \\`Hello \\${name}!\\`;\n}\n\n// Côté JS\nimport { instantiate } from \"@assemblyscript/loader\";\n\nconst wasm = await instantiate(\n  fetch(\"untouched.wasm\")\n);\n\nconst { \n  hello, \n  __newString, \n  __getString \n} = wasm.exports;\n\nconst param = __newString(\"Paris\");\nconst result = hello(param);\nconsole.log(__getString(result));\n\n`;\n\nexport default (\n\n  <CodeSlide\n        bgColor=\"secondary\"\n        transition={['fade']}\n        lang=\"js\"\n        code={code}\n        fit\n        ranges={[\n          { loc: [0, 3] },\n          { loc: [4, 8] },\n          { loc: [15, 17] },\n          { loc: [20, 23] },\n          { loc: [24, 26] },\n          { loc: [27, 30] },\n          { loc: [31, 36] },\n          { loc: [37, 41] },\n        ]}\n        showLineNumbers={true}\n      />\n\n\n\n);\n\n// besoind e code js pour bootstraper une appli JS - ça c'est indépendant d'assemblyscript\n// conseil assemblyscript loader dés que l'on veut passer autre chose qu'un nombre en param comme une string, \n// oui c'est plus compliqué que ça en a l'air une string\n\n\n// WEBPACK FOOTER //\n// ./src/slides/2_getting_started/start_2.js"],"sourceRoot":""}